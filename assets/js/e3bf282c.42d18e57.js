"use strict";(self.webpackChunkwire_docs=self.webpackChunkwire_docs||[]).push([[9404],{67023:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>c,metadata:()=>a,toc:()=>d});var r=n(74848),o=n(28453);const c={},i="cdt-init",a={id:"api-reference/tooling/cdt/cdt-init",title:"cdt-init",description:"This tool is used to generate a skeleton smart contract and directory structure.",source:"@site/docs/api-reference/tooling/cdt/cdt-init.md",sourceDirName:"api-reference/tooling/cdt",slug:"/api-reference/tooling/cdt/cdt-init",permalink:"/wire-docs/docs/api-reference/tooling/cdt/cdt-init",draft:!1,unlisted:!1,editUrl:"https://github.com/Wire-Network/wire-docs/docs/api-reference/tooling/cdt/cdt-init.md",tags:[],version:"current",frontMatter:{},sidebar:"apiReferenceSidebar",previous:{title:"CDT Reference Index",permalink:"/wire-docs/docs/api-reference/tooling/cdt/"},next:{title:"cdt-ld",permalink:"/wire-docs/docs/api-reference/tooling/cdt/cdt-ld"}},s={},d=[];function l(e){const t={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"cdt-init",children:"cdt-init"})}),"\n",(0,r.jsx)(t.p,{children:'This tool is used to generate a skeleton smart contract and directory structure.\nTo generate a new smart contract project you can either generate a "bare" project (no CMake) or the default is to generate a CMake project.'}),"\n",(0,r.jsx)(t.p,{children:"Example:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"cdt-init --path=path/to/project/location --project=hello_contract_folder\n"})}),"\n",(0,r.jsxs)(t.p,{children:["This will generate a project folder ",(0,r.jsx)(t.code,{children:"hello_contract_folder"})," in the path ",(0,r.jsx)(t.code,{children:"path/to/project/location"})," containing the skeleton smart contract and directory structure."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sh",children:"USAGE: cdt-init [options]\n\nOPTIONS:\n\nGeneric Options:\n\n  -help             - Display available options (-help-hidden for more)\n  -help-list        - Display list of available options (-help-list-hidden for more)\n  -version          - Display the version of this program\n\ncdt-init:\ngenerates a smart contract project\n\n  -bare             - produces only a skeleton smart contract without CMake support\n  -path=<string>    - directory to place the project\n  -project=<string> - output project name\n"})})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>a});var r=n(96540);const o={},c=r.createContext(o);function i(e){const t=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(c.Provider,{value:t},e.children)}}}]);