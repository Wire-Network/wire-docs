"use strict";(self.webpackChunkwire_docs=self.webpackChunkwire_docs||[]).push([[8411],{6764:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>a});var i=n(74848),d=n(28453);const r={},s=void 0,o={id:"api-reference/wire-cdt/how-to-guides/multi-index/how-to-delete-data-from-a-multi-index-table",title:"how-to-delete-data-from-a-multi-index-table",description:"\x3c!-- ---",source:"@site/docs/api-reference/wire-cdt/how-to-guides/multi-index/how-to-delete-data-from-a-multi-index-table.md",sourceDirName:"api-reference/wire-cdt/how-to-guides/multi-index",slug:"/api-reference/wire-cdt/how-to-guides/multi-index/how-to-delete-data-from-a-multi-index-table",permalink:"/docs/api-reference/wire-cdt/how-to-guides/multi-index/how-to-delete-data-from-a-multi-index-table",draft:!1,unlisted:!1,editUrl:"https://github.com/Wire-Network/wire-docs/edit/master/docs/api-reference/wire-cdt/how-to-guides/multi-index/how-to-delete-data-from-a-multi-index-table.md",tags:[],version:"current",frontMatter:{}},l={},a=[{value:"Overview",id:"overview",level:2},{value:"Reference",id:"reference",level:2},{value:"Before you begin",id:"before-you-begin",level:2},{value:"Procedure",id:"procedure",level:2},{value:"1. Find The User You Want To Delete",id:"1-find-the-user-you-want-to-delete",level:3},{value:"2. Delete The User If Found",id:"2-delete-the-user-if-found",level:3},{value:"Summary",id:"summary",level:2},{value:"Next Steps",id:"next-steps",level:2}];function c(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,d.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(t.p,{children:"This guide provides instructions to to delete data from a multi-index table."}),"\n",(0,i.jsx)(t.h2,{id:"reference",children:"Reference"}),"\n",(0,i.jsx)(t.p,{children:"See the following code reference:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["The ",(0,i.jsx)(t.code,{children:"multi-index"})," class."]}),"\n",(0,i.jsxs)(t.li,{children:["The ",(0,i.jsx)(t.code,{children:"multi-index::find(...)"})," method."]}),"\n",(0,i.jsxs)(t.li,{children:["The ",(0,i.jsx)(t.code,{children:"multi-index::erase(...)"})," method."]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"before-you-begin",children:"Before you begin"}),"\n",(0,i.jsx)(t.p,{children:"Make sure you have the following prerequisites in place:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["A Wire development environment, for details consult the ",(0,i.jsx)(t.a,{href:"/docs/getting-started/getting-started-intro",children:"Get Started Guide"}),","]}),"\n",(0,i.jsxs)(t.li,{children:["A multi-index ",(0,i.jsx)(t.code,{children:"testab"})," table instance which stores ",(0,i.jsx)(t.code,{children:"user"})," objects indexed by the primary key which is of type ",(0,i.jsx)(t.code,{children:"sysio::name"}),". Consult the section ",(0,i.jsx)(t.a,{href:"/docs/api-reference/wire-cdt/how-to-guides/multi-index/how-to-instantiate-a-multi-index-table",children:"How to instantiate a multi-index table"})," to learn how to set it up."]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"procedure",children:"Procedure"}),"\n",(0,i.jsxs)(t.p,{children:["Complete the following steps to implement a ",(0,i.jsx)(t.code,{children:"del"})," action which deletes an user object, identified by its account name, from the multi-index table."]}),"\n",(0,i.jsx)(t.h3,{id:"1-find-the-user-you-want-to-delete",children:"1. Find The User You Want To Delete"}),"\n",(0,i.jsxs)(t.p,{children:["Use the multi-index ",(0,i.jsx)(t.code,{children:"find(...)"})," method to locate the user object you want to delete. The targeted user is searched based on its account name."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-cpp",children:"[[sysio::action]] void multi_index_example::del( name user ) {\n  // check if the user already exists\n  auto itr = testtab.find(user.value);\n}\n"})}),"\n",(0,i.jsx)(t.h3,{id:"2-delete-the-user-if-found",children:"2. Delete The User If Found"}),"\n",(0,i.jsxs)(t.p,{children:["Check to see if the user exists and use ",(0,i.jsx)(t.code,{children:"erase"}),"(...) method to delete the row from table. Otherwise print an informational message and return."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-diff",children:'[[sysio::action]] void multi_index_example::del( name user ) {\n  // check if the user already exists\n  auto itr = testtab.find(user.value);\n+  if ( itr == testtab.end() ) {\n+    printf("User does not exist in table, nothing to delete");\n+    return;\n+  }\n\n+  testtab.erase( itr );\n}\n'})}),"\n",(0,i.jsx)(t.admonition,{type:"info",children:(0,i.jsxs)(t.p,{children:["| A full example project demonstrating the instantiation and usage of multi-index table can be found ",(0,i.jsx)(t.a,{href:"https://github.com/Wire-Network/cdt/blob/master/examples/multi_index_example",children:"here"}),"."]})}),"\n",(0,i.jsx)(t.h2,{id:"summary",children:"Summary"}),"\n",(0,i.jsx)(t.p,{children:"In conclusion, the above instructions show how to delete data from a multi-index table."}),"\n",(0,i.jsx)(t.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"You can verify if the user object was deleted from the multi-index table. ."}),"\n"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-cpp",children:'  // check if the user was deleted\n  auto itr = testtab.find(user.value);\n  if ( itr == testtab.end() ) {\n    printf("User was deleted successfully.");\n  }\n  else {\n    printf("User was NOT deleted!");\n  }\n'})})]})}function u(e={}){const{wrapper:t}={...(0,d.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>o});var i=n(96540);const d={},r=i.createContext(d);function s(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:s(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);