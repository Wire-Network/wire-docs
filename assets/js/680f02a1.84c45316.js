"use strict";(self.webpackChunkwire_docs=self.webpackChunkwire_docs||[]).push([[4963],{76592:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>d});var n=o(74848),i=o(28453);const s={title:"Fast start without previous history"},r=void 0,l={id:"api-reference/tooling/nodeop/how-to/how-to-fast-start-without-old-history",title:"Fast start without previous history",description:"Goal",source:"@site/docs/api-reference/tooling/nodeop/how-to/how-to-fast-start-without-old-history.md",sourceDirName:"api-reference/tooling/nodeop/how-to",slug:"/api-reference/tooling/nodeop/how-to/how-to-fast-start-without-old-history",permalink:"/docs/api-reference/tooling/nodeop/how-to/how-to-fast-start-without-old-history",draft:!1,unlisted:!1,editUrl:"https://github.com/Wire-Network/wire-docs/edit/master/docs/api-reference/tooling/nodeop/how-to/how-to-fast-start-without-old-history.md",tags:[],version:"current",frontMatter:{title:"Fast start without previous history"},sidebar:"apiReferenceSidebar",previous:{title:"Create a snapshot with full state history",permalink:"/docs/api-reference/tooling/nodeop/how-to/how-to-create-snapshot-with-full-history"},next:{title:"Generate a blocks.log file",permalink:"/docs/api-reference/tooling/nodeop/how-to/how-to-generate-a-blocks.log"}},c={},d=[{value:"Goal",id:"goal",level:2},{value:"Before you begin",id:"before-you-begin",level:2},{value:"Steps",id:"steps",level:2},{value:"Notes",id:"notes",level:2}];function a(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",ol:"ol",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"goal",children:"Goal"}),"\n",(0,n.jsx)(t.p,{children:"This procedure records the current chain state and future history, without previous historical data on the local chain."}),"\n",(0,n.jsx)(t.h2,{id:"before-you-begin",children:"Before you begin"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["Make sure ",(0,n.jsx)(t.a,{href:"/docs/getting-started/install-dependencies",children:"Wire core"})," is installed."]}),"\n",(0,n.jsxs)(t.li,{children:["Learn about ",(0,n.jsx)(t.a,{href:"/docs/api-reference/tooling/nodeop/usage/",children:"Using Nodeop"}),"."]}),"\n",(0,n.jsxs)(t.li,{children:["Get familiar with ",(0,n.jsx)(t.a,{href:"/docs/api-reference/tooling/nodeop/plugins/state-history-plugin",children:"state_history_plugin"}),"."]}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"steps",children:"Steps"}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsx)(t.p,{children:"Get the following:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["A portable snapshot (",(0,n.jsx)(t.code,{children:"data/snapshots/snapshot-xxxxxxx.bin"}),")"]}),"\n",(0,n.jsx)(t.li,{children:"Optional: a block log which includes the block the snapshot was taken at"}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:["Make sure ",(0,n.jsx)(t.code,{children:"data/state"})," does not exist"]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:["Start ",(0,n.jsx)(t.code,{children:"nodeop"})," with the ",(0,n.jsx)(t.code,{children:"--snapshot"})," option, and the options listed in the ",(0,n.jsx)(t.a,{href:"/docs/api-reference/tooling/nodeop/plugins/state-history-plugin",children:(0,n.jsx)(t.code,{children:"state_history_plugin"})}),"."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:["Look for ",(0,n.jsx)(t.code,{children:"Placing initial state in block n"})," in the log, where n is the start block number."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:["If using a database filler, start the filler with ",(0,n.jsx)(t.code,{children:"--fpg-create"})," (if PostgreSQL), ",(0,n.jsx)(t.code,{children:"--fill-skip-to n"}),", and ",(0,n.jsx)(t.code,{children:"--fill-trim"}),". Replace ",(0,n.jsx)(t.code,{children:"n"})," with the value above."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:["Do not stop ",(0,n.jsx)(t.code,{children:"nodeop"})," until it has received at least 1 block from the network, or it won't be able to restart."]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"notes",children:"Notes"}),"\n",(0,n.jsxs)(t.p,{children:["If ",(0,n.jsx)(t.code,{children:"nodeop"})," fails to receive blocks from the network, then try the above using ",(0,n.jsx)(t.code,{children:"net_api_plugin"}),". Use ",(0,n.jsx)(t.code,{children:"clio net disconnect"})," and ",(0,n.jsx)(t.code,{children:"clio net connect"})," to reconnect nodes which timed out."]}),"\n",(0,n.jsxs)(t.admonition,{type:"warning",children:[(0,n.jsxs)(t.mdxAdmonitionTitle,{children:["Caution when using ",(0,n.jsx)(t.code,{children:"net_api_plugin"})]}),(0,n.jsxs)(t.p,{children:["| Either use a firewall to block access to your ",(0,n.jsx)(t.code,{children:"http-server-address"}),", or change it to ",(0,n.jsx)(t.code,{children:"localhost:8888"})," to disable remote access."]})]}),"\n",(0,n.jsx)(t.admonition,{type:"info",children:(0,n.jsxs)(t.p,{children:["| If you run a database filler after this point, use the ",(0,n.jsx)(t.code,{children:"--fill-trim"})," option when restarting. Only use ",(0,n.jsx)(t.code,{children:"--fpg-create"})," and ",(0,n.jsx)(t.code,{children:"--fill-skip-to"})," the first time."]})}),"\n",(0,n.jsx)(t.admonition,{type:"info",children:(0,n.jsxs)(t.p,{children:["| On large chains, this procedure creates a delta record that is too large for javascript processes to handle. 64-bit C++ processes can handle the large record. If using a database filler, ",(0,n.jsx)(t.code,{children:"fill-pg"})," and ",(0,n.jsx)(t.code,{children:"fill-lmdb"})," break up the large record into smaller records when filling databases."]})})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}},28453:(e,t,o)=>{o.d(t,{R:()=>r,x:()=>l});var n=o(96540);const i={},s=n.createContext(i);function r(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);