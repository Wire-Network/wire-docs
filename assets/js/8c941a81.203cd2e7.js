"use strict";(self.webpackChunkwire_docs=self.webpackChunkwire_docs||[]).push([[896],{49809:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var o=n(74848),i=n(28453);const r={},s=void 0,c={id:"api-reference/tooling/cdt/cdt-ld",title:"cdt-ld",description:"The cdt-ld tool is a the custom web assembly linker for Wire Sysio framework smart contracts.",source:"@site/docs/api-reference/tooling/cdt/cdt-ld.md",sourceDirName:"api-reference/tooling/cdt",slug:"/api-reference/tooling/cdt/cdt-ld",permalink:"/wire-docs/docs/api-reference/tooling/cdt/cdt-ld",draft:!1,unlisted:!1,editUrl:"https://github.com/Wire-Network/wire-docs/docs/api-reference/tooling/cdt/cdt-ld.md",tags:[],version:"current",frontMatter:{},sidebar:"apiReferenceSidebar",previous:{title:"cdt-init",permalink:"/wire-docs/docs/api-reference/tooling/cdt/cdt-init"},next:{title:"cdt-abidiff",permalink:"/wire-docs/docs/api-reference/tooling/cdt/cdt-abidiff"}},a={},l=[];function d(e){const t={code:"code",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:"The cdt-ld tool is a the custom web assembly linker for Wire Sysio framework smart contracts."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"USAGE: cdt-ld [options] <input file> ...\n\nOPTIONS:\n\nGeneric Options:\n\n  -help             - Display available options (-help-hidden for more)\n  -help-list        - Display list of available options (-help-list-hidden for more)\n  -version          - Display the version of this program\n\nld options:\n\n  -L=<string>       - Add directory to library search path\n  -fasm             - Assemble file for x86-64\n  -fnative          - Compile and link for x86-64\n  -fno-cfl-aa       - Disable CFL Alias Analysis\n  -fno-lto          - Disable LTO\n  -fno-post-pass    - Don't run post processing pass\n  -fno-stack-first  - Don't set the stack first in memory\n  -stack-size       - Specifies the maximum stack size for the contract\n  -fuse-main        - Use main as entry\n  -l=<string>       - Root name of library to link\n  -lto-opt=<string> - LTO Optimization level (O0-O3)\n  -o=<string>       - Write output to <file>\n"})})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>c});var o=n(96540);const i={},r=o.createContext(i);function s(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);