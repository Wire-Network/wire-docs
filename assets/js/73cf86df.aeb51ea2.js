"use strict";(self.webpackChunkwire_docs=self.webpackChunkwire_docs||[]).push([[9126],{58398:(e,n,c)=>{c.r(n),c.d(n,{assets:()=>s,contentTitle:()=>t,default:()=>f,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var r=c(74848),i=c(28453);const o={id:"index",title:"get"},t=void 0,a={id:"api-reference/tooling/clio/command-reference/get/index",title:"get",description:"Description",source:"@site/docs/api-reference/tooling/clio/command-reference/get/index.md",sourceDirName:"api-reference/tooling/clio/command-reference/get",slug:"/api-reference/tooling/clio/command-reference/get/",permalink:"/docs/api-reference/tooling/clio/command-reference/get/",draft:!1,unlisted:!1,editUrl:"https://github.com/Wire-Network/wire-docs/docs/api-reference/tooling/clio/command-reference/get/index.md",tags:[],version:"current",frontMatter:{id:"index",title:"get"},sidebar:"apiReferenceSidebar",previous:{title:"key",permalink:"/docs/api-reference/tooling/clio/command-reference/create/key"},next:{title:"abi",permalink:"/docs/api-reference/tooling/clio/command-reference/get/abi"}},s={},l=[{value:"Description",id:"description",level:2},{value:"Subcommands",id:"subcommands",level:2}];function d(e){const n={a:"a",h2:"h2",li:"li",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,r.jsx)(n.p,{children:"Retrieves various items and information from the blockchain"}),"\n",(0,r.jsx)(n.h2,{id:"subcommands",children:"Subcommands"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/api-reference/tooling/clio/command-reference/get/info",children:"info"})," - Get current blockchain information"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/api-reference/tooling/clio/command-reference/get/block",children:"block"})," - Retrieve a full block from the blockchain"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/api-reference/tooling/clio/command-reference/get/account",children:"account"})," - Retrieve an account from the blockchain"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/api-reference/tooling/clio/command-reference/get/code",children:"code"})," - Retrieve the code and ABI for an account"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/api-reference/tooling/clio/command-reference/get/abi",children:"abi"})," - Retrieve the ABI for an account"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/api-reference/tooling/clio/command-reference/get/table",children:"table"})," - Retrieve the contents of a database table"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/api-reference/tooling/clio/command-reference/get/kv-table",children:"kv_table"})," - Retrieve the contents of a database kv_table"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/api-reference/tooling/clio/command-reference/get/scope",children:"scope"})," - Retrieve a list of scopes and tables owned by a contract"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/api-reference/tooling/clio/command-reference/get/currency",children:"currency"})," - Retrieve information related to standard currencies"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/api-reference/tooling/clio/command-reference/get/accounts",children:"accounts"})," - Retrieve accounts associated with a public key"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/api-reference/tooling/clio/command-reference/get/servants",children:"servants"})," - Retrieve accounts which are servants of a given account"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/api-reference/tooling/clio/command-reference/get/transaction",children:"transaction"})," - Retrieve a transaction from the blockchain"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/api-reference/tooling/clio/command-reference/get/actions",children:"actions"})," - Retrieve all actions with specific account name referenced in authorization or receiver"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/api-reference/tooling/clio/command-reference/get/schedule",children:"schedule"})," - Retrieve the producer schedule"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/api-reference/tooling/clio/command-reference/get/transaction-id",children:"transaction_id"})," - Get transaction id given transaction object"]}),"\n"]})]})}function f(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,n,c)=>{c.d(n,{R:()=>t,x:()=>a});var r=c(96540);const i={},o=r.createContext(i);function t(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);