"use strict";(self.webpackChunkwire_docs=self.webpackChunkwire_docs||[]).push([[9079],{59843:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>a,toc:()=>d});var n=t(74848),r=t(28453);const s={title:"Generate a snapshot"},i=void 0,a={id:"api-reference/tooling/nodeop/how-to/how-to-generate-a-snapshot",title:"Generate a snapshot",description:"You can force a running nodeop instance to create a snapshot by using the createsnapshot RPC API call supported by the producerapi_plugin. This will create a snapshot file in the data/snapshots directory. Snapshot files are written to disk with the name pattern snapshot-\\.bin.",source:"@site/docs/api-reference/tooling/nodeop/how-to/how-to-generate-a-snapshot.md",sourceDirName:"api-reference/tooling/nodeop/how-to",slug:"/api-reference/tooling/nodeop/how-to/how-to-generate-a-snapshot",permalink:"/docs/api-reference/tooling/nodeop/how-to/how-to-generate-a-snapshot",draft:!1,unlisted:!1,editUrl:"https://github.com/Wire-Network/wire-docs/docs/api-reference/tooling/nodeop/how-to/how-to-generate-a-snapshot.md",tags:[],version:"current",frontMatter:{title:"Generate a snapshot"},sidebar:"apiReferenceSidebar",previous:{title:"Generate a blocks.log file",permalink:"/docs/api-reference/tooling/nodeop/how-to/how-to-generate-a-blocks.log"},next:{title:"Replay from a blocks.log file",permalink:"/docs/api-reference/tooling/nodeop/how-to/how-to-replay-from-a-blocks.log"}},c={},d=[];function l(e){const o={admonition:"admonition",code:"code",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(o.p,{children:["You can force a running ",(0,n.jsx)(o.code,{children:"nodeop"})," instance to create a snapshot by using the ",(0,n.jsx)(o.code,{children:"create_snapshot"})," RPC API call supported by the ",(0,n.jsx)(o.code,{children:"producer_api_plugin"}),". This will create a snapshot file in the ",(0,n.jsx)(o.code,{children:"data/snapshots"})," directory. Snapshot files are written to disk with the name pattern ",(0,n.jsx)(o.code,{children:"*snapshot-\\<head_block_id_in_hex\\>.bin*"}),"."]}),"\n",(0,n.jsx)(o.admonition,{title:"Snapshots Location",type:"info",children:(0,n.jsxs)(o.p,{children:["| By default, snapshots are written to the ",(0,n.jsx)(o.code,{children:"data/snapshots"})," directory relative to your ",(0,n.jsx)(o.code,{children:"nodeop"})," data directory. See the ",(0,n.jsx)(o.code,{children:"-d [ --data-dir ]"})," option."]})}),"\n",(0,n.jsxs)(o.p,{children:["If your ",(0,n.jsx)(o.code,{children:"nodeop"})," instance is running locally, the below command will request ",(0,n.jsx)(o.code,{children:"nodeop"})," to create a snapshot:"]}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-sh",children:"curl -X POST http://127.0.0.1:8888/v1/producer/create_snapshot\n"})}),"\n",(0,n.jsxs)(o.admonition,{type:"info",children:[(0,n.jsxs)(o.mdxAdmonitionTitle,{children:["Getting other ",(0,n.jsx)(o.code,{children:"blocks.log"})," files"]}),(0,n.jsxs)(o.p,{children:["| You can also download a ",(0,n.jsx)(o.code,{children:"blocks.log"})," file from third party providers."]})]})]})}function p(e={}){const{wrapper:o}={...(0,r.R)(),...e.components};return o?(0,n.jsx)(o,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},28453:(e,o,t)=>{t.d(o,{R:()=>i,x:()=>a});var n=t(96540);const r={},s=n.createContext(r);function i(e){const o=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function a(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(s.Provider,{value:o},e.children)}}}]);