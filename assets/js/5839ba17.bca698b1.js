"use strict";(self.webpackChunkwire_docs=self.webpackChunkwire_docs||[]).push([[8875],{37693:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>s});var r=n(74848),i=n(28453);const o={id:"create-key",title:"create_key"},c=void 0,a={id:"api-reference/tooling/clio/command-reference/wallet/create-key",title:"create_key",description:"Description",source:"@site/docs/api-reference/tooling/clio/command-reference/wallet/create-key.md",sourceDirName:"api-reference/tooling/clio/command-reference/wallet",slug:"/api-reference/tooling/clio/command-reference/wallet/create-key",permalink:"/docs/api-reference/tooling/clio/command-reference/wallet/create-key",draft:!1,unlisted:!1,editUrl:"https://github.com/Wire-Network/wire-docs/edit/master/docs/api-reference/tooling/clio/command-reference/wallet/create-key.md",tags:[],version:"current",frontMatter:{id:"create-key",title:"create_key"},sidebar:"apiReferenceSidebar",previous:{title:"create",permalink:"/docs/api-reference/tooling/clio/command-reference/wallet/create"},next:{title:"import",permalink:"/docs/api-reference/tooling/clio/command-reference/wallet/import"}},l={},s=[{value:"Description",id:"description",level:2},{value:"Positionals",id:"positionals",level:2},{value:"Options",id:"options",level:2},{value:"Usage",id:"usage",level:2},{value:"Outputs",id:"outputs",level:2}];function d(e){const t={code:"code",em:"em",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,r.jsxs)(t.p,{children:["Creates a key pair within the wallet so that you don't need to manually import it like you would with ",(0,r.jsx)(t.code,{children:"clio create key"}),'. By default, this will create a key with the type "favored" by the wallet, which is a K1 key. But this command also lets you create a key in R1 format.']}),"\n",(0,r.jsx)(t.h2,{id:"positionals",children:"Positionals"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"key_type"})," ",(0,r.jsx)(t.em,{children:"TEXT"}),' - "K1" or "R1" Key type to create']}),"\n",(0,r.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,r.jsx)(t.p,{children:"-n,--name TEXT=default The name of the wallet to create key into"}),"\n",(0,r.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sh",children:"clio wallet create_key K1\n"})}),"\n",(0,r.jsx)(t.h2,{id:"outputs",children:"Outputs"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-console",children:'Created new private key with a public key of: "EOS67xHKzQArkWZN6rKLCq7NLvaj8kurwxzRxoTVz6cgDJkiWdGug"\n'})})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>a});var r=n(96540);const i={},o=r.createContext(i);function c(e){const t=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);