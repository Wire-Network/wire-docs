"use strict";(self.webpackChunkwire_docs=self.webpackChunkwire_docs||[]).push([[6699],{44901:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var r=t(74848),n=t(28453);const s={title:"Nodeop Troubleshooting"},i=void 0,a={id:"api-reference/tooling/nodeop/troubleshooting",title:"Nodeop Troubleshooting",description:'"Database dirty flag set (likely due to unclean shutdown): replay required"',source:"@site/docs/api-reference/tooling/nodeop/troubleshooting.md",sourceDirName:"api-reference/tooling/nodeop",slug:"/api-reference/tooling/nodeop/troubleshooting",permalink:"/wire-docs/docs/api-reference/tooling/nodeop/troubleshooting",draft:!1,unlisted:!1,editUrl:"https://github.com/Wire-Network/wire-docs/docs/api-reference/tooling/nodeop/troubleshooting.md",tags:[],version:"current",frontMatter:{title:"Nodeop Troubleshooting"},sidebar:"apiReferenceSidebar",previous:{title:"Restore snapshot with full state history",permalink:"/wire-docs/docs/api-reference/tooling/nodeop/how-to/how-to-restore-snapshot-with-full-history"},next:{title:"CDT Reference Index",permalink:"/wire-docs/docs/api-reference/tooling/cdt/"}},l={},c=[{value:"&quot;Database dirty flag set (likely due to unclean shutdown): replay required&quot;",id:"database-dirty-flag-set-likely-due-to-unclean-shutdown-replay-required",level:3},{value:"&quot;Memory does not match data&quot; Error at Restart",id:"memory-does-not-match-data-error-at-restart",level:3},{value:"&quot;Could not grow database file to requested size.&quot; Error",id:"could-not-grow-database-file-to-requested-size-error",level:3},{value:"What version of Wire Sysio am I running/connecting to?",id:"what-version-of-wire-sysio-am-i-runningconnecting-to",level:3},{value:"Error 3070000: WASM Exception Error",id:"error-3070000-wasm-exception-error",level:3}];function d(e){const o={a:"a",code:"code",h3:"h3",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(o.h3,{id:"database-dirty-flag-set-likely-due-to-unclean-shutdown-replay-required",children:'"Database dirty flag set (likely due to unclean shutdown): replay required"'}),"\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"nodeop"})," needs to be shut down cleanly. To ensure this is done, send a ",(0,r.jsx)(o.code,{children:"SIGTERM"}),", ",(0,r.jsx)(o.code,{children:"SIGQUIT"})," or ",(0,r.jsx)(o.code,{children:"SIGINT"})," and wait for the process to shutdown. Failing to do this will result in this error. If you get this error, your only recourse is to replay by starting ",(0,r.jsx)(o.code,{children:"nodeop"})," with ",(0,r.jsx)(o.code,{children:"--replay-blockchain"})]}),"\n",(0,r.jsx)(o.h3,{id:"memory-does-not-match-data-error-at-restart",children:'"Memory does not match data" Error at Restart'}),"\n",(0,r.jsxs)(o.p,{children:["If you get an error such as ",(0,r.jsx)(o.code,{children:"St9exception: content of memory does not match data expected by executable"})," when trying to start ",(0,r.jsx)(o.code,{children:"nodeop"}),", try restarting ",(0,r.jsx)(o.code,{children:"nodeop"})," with one of the following options (you can use ",(0,r.jsx)(o.code,{children:"nodeop --help"})," to get a full listing of these)."]}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{children:"Command Line Options for sysio::chain_plugin:\n    --fix-reversible-blocks               recovers reversible block database if \n                                          that database is in a bad state\n    --force-all-checks                    do not skip any checks that can be \n                                          skipped while replaying irreversible \n                                          blocks\n    --replay-blockchain                   clear chain state database and replay \n                                          all blocks\n    --hard-replay-blockchain              clear chain state database, recover as \n                                          many blocks as possible from the block \n                                          log, and then replay those blocks\n    --delete-all-blocks                   clear chain state database and block \n                                          log\n"})}),"\n",(0,r.jsx)(o.h3,{id:"could-not-grow-database-file-to-requested-size-error",children:'"Could not grow database file to requested size." Error'}),"\n",(0,r.jsxs)(o.p,{children:["Start ",(0,r.jsx)(o.code,{children:"nodeop"})," with ",(0,r.jsx)(o.code,{children:"--shared-memory-size-mb 1024"}),". A 1 GB shared memory file allows approximately half a million transactions."]}),"\n",(0,r.jsx)(o.h3,{id:"what-version-of-wire-sysio-am-i-runningconnecting-to",children:"What version of Wire Sysio am I running/connecting to?"}),"\n",(0,r.jsxs)(o.p,{children:["If defaults can be used, then ",(0,r.jsx)(o.code,{children:"clio get info"})," will output a block that contains a field called ",(0,r.jsx)(o.code,{children:"server_version"}),".  If your ",(0,r.jsx)(o.code,{children:"nodeop"})," is not using the defaults, then you need to know the URL of the ",(0,r.jsx)(o.code,{children:"nodeop"}),". In that case, use the following with your ",(0,r.jsx)(o.code,{children:"nodeop"})," URL:"]}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{className:"language-sh",children:"clio --url http://localhost:8888 get info\n"})}),"\n",(0,r.jsx)(o.p,{children:"To focus only on the version line within the block:"}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{className:"language-sh",children:"clio --url http://localhost:8888 get info | grep server_version\n"})}),"\n",(0,r.jsx)(o.h3,{id:"error-3070000-wasm-exception-error",children:"Error 3070000: WASM Exception Error"}),"\n",(0,r.jsxs)(o.p,{children:["If you try to deploy the ",(0,r.jsx)(o.code,{children:"sysio.bios"})," contract or ",(0,r.jsx)(o.code,{children:"sysio.system"})," contract in an attempt to boot an EOSIO-based blockchain and you get the following error or similar: ",(0,r.jsx)(o.code,{children:"Publishing contract... Error 3070000: WASM Exception Error Details: env.set_proposed_producers_ex unresolveable"}),", it is because you have to activate the ",(0,r.jsx)(o.code,{children:"PREACTIVATE_FEATURE"})," protocol first. More details about it and how to enable it can be found in the ",(0,r.jsx)(o.a,{href:"https://developers.eos.io/welcome/v2.1/tutorials/bios-boot-sequence/#112-set-the-sysiosystem-contract",children:"Bios Boot Sequence Tutorial"}),". For more information, you may also visit the ",(0,r.jsx)(o.a,{href:"https://developers.eos.io/manuals/eos/latest/nodeop/upgrade-guides/",children:"Nodeop Upgrade Guides"}),"."]})]})}function h(e={}){const{wrapper:o}={...(0,n.R)(),...e.components};return o?(0,r.jsx)(o,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,o,t)=>{t.d(o,{R:()=>i,x:()=>a});var r=t(96540);const n={},s=r.createContext(n);function i(e){const o=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function a(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),r.createElement(s.Provider,{value:o},e.children)}}}]);