"use strict";(self.webpackChunkwire_docs=self.webpackChunkwire_docs||[]).push([[500],{90513:(e,t,c)=>{c.r(t),c.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>d});var n=c(74848),s=c(28453);const i={sidebar_position:2,id:"smart-contracts-clio",title:"Using clio",description:"Using clio to push transactions to a contract"},a="Smart Contract Interactions using clio",r={id:"smart-contract-development/interacting-with-contracts/smart-contracts-clio",title:"Using clio",description:"Using clio to push transactions to a contract",source:"@site/docs/smart-contract-development/interacting-with-contracts/smart-contracts-clio.md",sourceDirName:"smart-contract-development/interacting-with-contracts",slug:"/smart-contract-development/interacting-with-contracts/smart-contracts-clio",permalink:"/docs/smart-contract-development/interacting-with-contracts/smart-contracts-clio",draft:!1,unlisted:!1,editUrl:"https://github.com/Wire-Network/wire-docs/edit/master/docs/smart-contract-development/interacting-with-contracts/smart-contracts-clio.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,id:"smart-contracts-clio",title:"Using clio",description:"Using clio to push transactions to a contract"},sidebar:"contentSidebar",previous:{title:"Interacting with Contracts",permalink:"/docs/category/interacting-with-contracts"},next:{title:"Using SDK Core",permalink:"/docs/smart-contract-development/interacting-with-contracts/smart-contracts-wirejs"}},o={},d=[{value:"Overview",id:"overview",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Steps",id:"steps",level:2},{value:"Step 1: Insert a record",id:"step-1-insert-a-record",level:3},{value:"Step 2: Perfom an update",id:"step-2-perfom-an-update",level:3},{value:"Step 3: Retrieve all users",id:"step-3-retrieve-all-users",level:3},{value:"Step 4: Attempt unauthorized transaction",id:"step-4-attempt-unauthorized-transaction",level:3}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsxs)(t.h1,{id:"smart-contract-interactions-using-clio",children:["Smart Contract Interactions using ",(0,n.jsx)(t.code,{children:"clio"})]})}),"\n",(0,n.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,n.jsxs)(t.p,{children:["In the article you\u2019ll learn how to execute actions on a contract with the ",(0,n.jsx)(t.code,{children:"clio"})," tool. It guides you through inserting and updating records, checking updates, and testing out behavior on unauthorized change attempt."]}),"\n",(0,n.jsx)(t.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"../../getting-started/install-dependencies#binary-installation",children:"Installation and Development Environment Setup"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"/docs/smart-contract-development/company-contract",children:"Company contract tutorial"})}),"\n",(0,n.jsxs)(t.li,{children:["Two new accounts ",(0,n.jsx)(t.code,{children:"jack"})," and ",(0,n.jsx)(t.code,{children:"nick"})]}),"\n"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-sh",children:"clio create account sysio jack $PUBLIC_KEY -p sysio@active \nclio create account sysio nick $PUBLIC_KEY -p sysio@active\n"})}),"\n",(0,n.jsx)(t.h2,{id:"steps",children:"Steps"}),"\n",(0,n.jsx)(t.h3,{id:"step-1-insert-a-record",children:"Step 1: Insert a record"}),"\n",(0,n.jsx)(t.p,{children:"First, let\u2019s have Jack insert or update his own record."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:'clio push action company upsertemp \'["jack", "Jack Sparrow", "jack@example.com", "active"]\' -p jack@active\n'})}),"\n",(0,n.jsx)(t.p,{children:"Output:"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"create-record",src:c(84613).A+"",width:"2048",height:"436"})}),"\n",(0,n.jsx)(t.p,{children:"You could use block explorer to inspect the table and the transactions."}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"be-table-check",src:c(8418).A+"",width:"2035",height:"1103"})}),"\n",(0,n.jsx)(t.h3,{id:"step-2-perfom-an-update",children:"Step 2: Perfom an update"}),"\n",(0,n.jsx)(t.p,{children:"Next, we update Jack\u2019s record,"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:'clio push action company upsertemp \'["jack", "Jack Nicholson", "jack@example.com", "active"]\' -p jack@active\n'})}),"\n",(0,n.jsx)(t.p,{children:"Output:"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"update-record",src:c(71448).A+"",width:"2048",height:"396"})}),"\n",(0,n.jsx)(t.p,{children:"Post-Action Check:"}),"\n",(0,n.jsx)(t.p,{children:"\u2022 Inspect Logs to ensure the update was executed.\n\u2022 Inspect Table to see Jack\u2019s updated record."}),"\n",(0,n.jsx)(t.h3,{id:"step-3-retrieve-all-users",children:"Step 3: Retrieve all users"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"clio push action company getallemp '{}' -p jack@active\n"})}),"\n",(0,n.jsx)(t.p,{children:"Ouput:"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"retrieve-records",src:c(49543).A+"",width:"2018",height:"396"})}),"\n",(0,n.jsx)(t.h3,{id:"step-4-attempt-unauthorized-transaction",children:"Step 4: Attempt unauthorized transaction"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:'clio push action company upsertemp \'["nick", "Nick Fury", "nick@example.com", "active"]\' -p jack@active\n'})}),"\n",(0,n.jsxs)(t.p,{children:["This should fail since Jack should not be able to add records for other users because the contract enforces proper authorization via ",(0,n.jsx)(t.code,{children:"require_auth()"}),"."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"unauthorized",src:c(88375).A+"",width:"2048",height:"642"})}),"\n",(0,n.jsx)(t.p,{children:"To insert Nick's record execute the following command:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:'clio push action company upsertemp \'["nick", "Nick Fury", "nick@example.com", "active"]\' -p nick@active\n'})})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},8418:(e,t,c)=>{c.d(t,{A:()=>n});const n=c.p+"assets/images/be-table-check-95aee1cfcdb99ab190b9bd724a0999e5.png"},84613:(e,t,c)=>{c.d(t,{A:()=>n});const n=c.p+"assets/images/clio-create-record-41399010389dbc460ad098ab3d5d3daa.png"},71448:(e,t,c)=>{c.d(t,{A:()=>n});const n=c.p+"assets/images/clio-update-record-ae15ec722b757bd436e2fb3b9c1cfc1a.png"},49543:(e,t,c)=>{c.d(t,{A:()=>n});const n=c.p+"assets/images/get-all-8d5d449b4135c1a45ab113045d5f82ed.png"},88375:(e,t,c)=>{c.d(t,{A:()=>n});const n=c.p+"assets/images/unauthorized-0c36446b415212d5da6c1de7d4fec7af.png"},28453:(e,t,c)=>{c.d(t,{R:()=>a,x:()=>r});var n=c(96540);const s={},i=n.createContext(s);function a(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);