"use strict";(self.webpackChunkwire_docs=self.webpackChunkwire_docs||[]).push([[7799],{47092:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>a,contentTitle:()=>d,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var n=i(74848),s=i(28453);const r={},d=void 0,o={id:"api-reference/wire-cdt/how-to-guides/multi-index/how-to-insert-data-into-a-multi-index-table",title:"how-to-insert-data-into-a-multi-index-table",description:"\x3c!-- ---",source:"@site/docs/api-reference/wire-cdt/how-to-guides/multi-index/how-to-insert-data-into-a-multi-index-table.md",sourceDirName:"api-reference/wire-cdt/how-to-guides/multi-index",slug:"/api-reference/wire-cdt/how-to-guides/multi-index/how-to-insert-data-into-a-multi-index-table",permalink:"/docs/api-reference/wire-cdt/how-to-guides/multi-index/how-to-insert-data-into-a-multi-index-table",draft:!1,unlisted:!1,editUrl:"https://github.com/Wire-Network/wire-docs/edit/master/docs/api-reference/wire-cdt/how-to-guides/multi-index/how-to-insert-data-into-a-multi-index-table.md",tags:[],version:"current",frontMatter:{}},a={},l=[{value:"Overview",id:"overview",level:2},{value:"Reference",id:"reference",level:2},{value:"Before you begin",id:"before-you-begin",level:2},{value:"Procedure",id:"procedure",level:2},{value:"1. Verify If The User Already Exists",id:"1-verify-if-the-user-already-exists",level:3},{value:"2. Insert The User If Not Found In Table",id:"2-insert-the-user-if-not-found-in-table",level:3},{value:"Summary",id:"summary",level:2},{value:"Next Steps",id:"next-steps",level:2}];function c(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,n.jsx)(t.p,{children:"This guide provides instructions to insert data into a multi-index table."}),"\n",(0,n.jsx)(t.h2,{id:"reference",children:"Reference"}),"\n",(0,n.jsx)(t.p,{children:"Relevant classes and methods:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["The ",(0,n.jsx)(t.code,{children:"multi-index"})," class."]}),"\n",(0,n.jsxs)(t.li,{children:["The ",(0,n.jsx)(t.code,{children:"multi-index::find(...)"})," method."]}),"\n",(0,n.jsxs)(t.li,{children:["The ",(0,n.jsx)(t.code,{children:"multi-index::emplace(...)"})," method."]}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"before-you-begin",children:"Before you begin"}),"\n",(0,n.jsx)(t.p,{children:"Make sure you have the following prerequisites in place:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["A Wire development environment, for details consult the ",(0,n.jsx)(t.a,{href:"https://docs.eosnetwork.com/docs/latest/getting-started/",children:"Get Started Guide"}),","]}),"\n",(0,n.jsxs)(t.li,{children:["A multi-index ",(0,n.jsx)(t.code,{children:"testab"})," table instance which stores ",(0,n.jsx)(t.code,{children:"user"})," objects indexed by the primary key which is of type ",(0,n.jsx)(t.code,{children:"sysio::name"}),". Consult the section ",(0,n.jsx)(t.a,{href:"/docs/api-reference/wire-cdt/how-to-guides/multi-index/how-to-instantiate-a-multi-index-table",children:"How to instantiate a multi-index table"})," to learn how to set it up."]}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"procedure",children:"Procedure"}),"\n",(0,n.jsxs)(t.p,{children:["Complete the following steps to insert an user object in the ",(0,n.jsx)(t.code,{children:"testtab"})," multi-index table:"]}),"\n",(0,n.jsx)(t.h3,{id:"1-verify-if-the-user-already-exists",children:"1. Verify If The User Already Exists"}),"\n",(0,n.jsx)(t.p,{children:"Use of the multi-index table iterator to find out if the user object already exists. The targeted user is searched based on its account name."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-cpp",children:"[[sysio::action]] void multi_index_example::set( name user ) {\n  // check if the user already exists\n  auto itr = testtab.find(user.value);\n}\n"})}),"\n",(0,n.jsx)(t.h3,{id:"2-insert-the-user-if-not-found-in-table",children:"2. Insert The User If Not Found In Table"}),"\n",(0,n.jsxs)(t.p,{children:["Use the ",(0,n.jsx)(t.code,{children:"emplace"})," method to make the insertion if the user object is not already in the multi-index table. Otherwise print an informational message."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-diff",children:'[[sysio::action]] void multi_index_example::set( name user ) {\n  // check if the user already exists\n  auto itr = testtab.find(user.value);\n\n+  if ( itr == testtab.end() ) {\n+    testtab.emplace( _self, [&]( auto& u ) {\n+      u.test_primary = user;\n+      u.secondary = "second"_n;\n+      u.datum = 0;\n+    });\n+  }\n+  else {\n+    printf("User already exists.");\n+  }\n}\n'})}),"\n",(0,n.jsx)(t.admonition,{type:"info",children:(0,n.jsxs)(t.p,{children:["| A full example project demonstrating the instantiation and usage of multi-index table can be found ",(0,n.jsx)(t.a,{href:"https://github.com/Wire-Network/cdt/blob/main/examples/multi_index_example",children:"here"}),"."]})}),"\n",(0,n.jsx)(t.h2,{id:"summary",children:"Summary"}),"\n",(0,n.jsx)(t.p,{children:"In conclusion, the above instructions show how to insert data in a multi-index table."}),"\n",(0,n.jsx)(t.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["You can ",(0,n.jsx)(t.a,{href:"./how-to-iterate-and-retrieve-a-multi_index-table",children:"iterate and retrieve newly inserted data"})," from the multi-index table."]}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>d,x:()=>o});var n=i(96540);const s={},r=n.createContext(s);function d(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);