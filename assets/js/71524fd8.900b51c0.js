"use strict";(self.webpackChunkwire_docs=self.webpackChunkwire_docs||[]).push([[6612],{72725:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>a});var n=t(74848),i=t(28453);const r={title:"Generate a blocks.log file"},c=void 0,s={id:"api-reference/tooling/nodeop/how-to/how-to-generate-a-blocks.log",title:"Generate a blocks.log file",description:"The blocks.log file is used by nodeop to persist irreversible blocks. This is the actual local copy of the immutable blockchain maintained by the node. The default location of the blocks.log file is in the data/blocks directory. However the default data directory can be overridden with the -d [ --data-dir ] option on the nodeop command line.",source:"@site/docs/api-reference/tooling/nodeop/how-to/how-to-generate-a-blocks.log.md",sourceDirName:"api-reference/tooling/nodeop/how-to",slug:"/api-reference/tooling/nodeop/how-to/how-to-generate-a-blocks.log",permalink:"/docs/api-reference/tooling/nodeop/how-to/how-to-generate-a-blocks.log",draft:!1,unlisted:!1,editUrl:"https://github.com/Wire-Network/wire-docs/edit/master/docs/api-reference/tooling/nodeop/how-to/how-to-generate-a-blocks.log.md",tags:[],version:"current",frontMatter:{title:"Generate a blocks.log file"},sidebar:"apiReferenceSidebar",previous:{title:"Fast start without previous history",permalink:"/docs/api-reference/tooling/nodeop/how-to/how-to-fast-start-without-old-history"},next:{title:"Generate a snapshot",permalink:"/docs/api-reference/tooling/nodeop/how-to/how-to-generate-a-snapshot"}},l={},a=[];function d(e){const o={admonition:"admonition",code:"code",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(o.p,{children:["The ",(0,n.jsx)(o.code,{children:"blocks.log"})," file is used by ",(0,n.jsx)(o.code,{children:"nodeop"})," to persist irreversible blocks. This is the actual local copy of the immutable blockchain maintained by the node. The default location of the ",(0,n.jsx)(o.code,{children:"blocks.log"})," file is in the ",(0,n.jsx)(o.code,{children:"data/blocks"})," directory. However the default data directory can be overridden with the ",(0,n.jsx)(o.code,{children:"-d [ --data-dir ]"})," option on the ",(0,n.jsx)(o.code,{children:"nodeop"})," command line."]}),"\n",(0,n.jsxs)(o.admonition,{type:"info",children:[(0,n.jsxs)(o.mdxAdmonitionTitle,{children:["Other ",(0,n.jsx)(o.code,{children:"blocks.log"})," files"]}),(0,n.jsxs)(o.p,{children:["| You can also download a ",(0,n.jsx)(o.code,{children:"blocks.log"})," file from third party providers."]})]})]})}function h(e={}){const{wrapper:o}={...(0,i.R)(),...e.components};return o?(0,n.jsx)(o,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},28453:(e,o,t)=>{t.d(o,{R:()=>c,x:()=>s});var n=t(96540);const i={},r=n.createContext(i);function c(e){const o=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function s(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),n.createElement(r.Provider,{value:o},e.children)}}}]);