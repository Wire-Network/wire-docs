"use strict";(self.webpackChunkwire_docs=self.webpackChunkwire_docs||[]).push([[2453],{38293:(e,n,c)=>{c.r(n),c.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var s=c(74848),t=c(28453);const i={},a="Naming Conventions",o={id:"api-reference/wire-cdt/best-practices/naming-conventions",title:"Naming Conventions",description:"When implementing Wire smart contracts and when storing data in a Wire blockchain, it is important to follow the established conventions for naming accounts, actions, tables, etc.",source:"@site/docs/api-reference/wire-cdt/best-practices/naming-conventions.md",sourceDirName:"api-reference/wire-cdt/best-practices",slug:"/api-reference/wire-cdt/best-practices/naming-conventions",permalink:"/docs/api-reference/wire-cdt/best-practices/naming-conventions",draft:!1,unlisted:!1,editUrl:"https://github.com/Wire-Network/wire-docs/docs/api-reference/wire-cdt/best-practices/naming-conventions.md",tags:[],version:"current",frontMatter:{}},r={},d=[{value:"Names",id:"names",level:2},{value:"Standard account names",id:"standard-account-names",level:3},{value:"Non-standard account names",id:"non-standard-account-names",level:3},{value:"Table, struct, class, function (action) names",id:"table-struct-class-function-action-names",level:3},{value:"Format",id:"format",level:3},{value:"Encoding and decoding",id:"encoding-and-decoding",level:2},{value:"Examples",id:"examples",level:3}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"naming-conventions",children:"Naming Conventions"})}),"\n",(0,s.jsx)(n.p,{children:"When implementing Wire smart contracts and when storing data in a Wire blockchain, it is important to follow the established conventions for naming accounts, actions, tables, etc."}),"\n",(0,s.jsx)(n.h2,{id:"names",children:"Names"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Applies to all Antelope encoded names (accounts, actions, tables, etc.)"}),"\n",(0,s.jsxs)(n.li,{children:["Encoded as a 64-bit unsigned integer (",(0,s.jsx)(n.code,{children:"uint64_t"}),") on the blockchain."]}),"\n",(0,s.jsxs)(n.li,{children:["First 12 characters, if any, encoded in ",(0,s.jsx)(n.code,{children:"base32"})," using characters: ",(0,s.jsx)(n.code,{children:"."}),", ",(0,s.jsx)(n.code,{children:"1-5"}),", ",(0,s.jsx)(n.code,{children:"a-z"})]}),"\n",(0,s.jsxs)(n.li,{children:["13th character, if applicable, encoded in ",(0,s.jsx)(n.code,{children:"base16"})," using characters: ",(0,s.jsx)(n.code,{children:"."}),", ",(0,s.jsx)(n.code,{children:"1-5"}),", ",(0,s.jsx)(n.code,{children:"a-j"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"standard-account-names",children:"Standard account names"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Must contain exactly 12 characters from the ",(0,s.jsx)(n.code,{children:"base32"})," set: ",(0,s.jsx)(n.code,{children:"."}),", ",(0,s.jsx)(n.code,{children:"1-5"}),", ",(0,s.jsx)(n.code,{children:"a-z"})]}),"\n",(0,s.jsx)(n.li,{children:"13th character not allowed or lesser than 12 characters"}),"\n",(0,s.jsxs)(n.li,{children:["Must start with a lowercase letter ",(0,s.jsx)(n.code,{children:"a-z"})]}),"\n",(0,s.jsxs)(n.li,{children:["Must not end in a dot ",(0,s.jsx)(n.code,{children:"."})," character"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"non-standard-account-names",children:"Non-standard account names"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["May contain between 1 and 12 characters from the ",(0,s.jsx)(n.code,{children:"base32"})," set: ",(0,s.jsx)(n.code,{children:"."}),", ",(0,s.jsx)(n.code,{children:"1-5"}),", ",(0,s.jsx)(n.code,{children:"a-z"})]}),"\n",(0,s.jsx)(n.li,{children:"13th character not allowed in account name"}),"\n",(0,s.jsxs)(n.li,{children:["Must not end in a dot ",(0,s.jsx)(n.code,{children:"."})," character"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"table-struct-class-function-action-names",children:"Table, struct, class, function (action) names"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"May contain between 1 and 13 characters."}),"\n",(0,s.jsxs)(n.li,{children:["First 12 characters, if any, from the ",(0,s.jsx)(n.code,{children:"base32"})," set: ",(0,s.jsx)(n.code,{children:"."}),", ",(0,s.jsx)(n.code,{children:"1-5"}),", ",(0,s.jsx)(n.code,{children:"a-z"})]}),"\n",(0,s.jsxs)(n.li,{children:["13th character, if any, from the ",(0,s.jsx)(n.code,{children:"base16"})," set: ",(0,s.jsx)(n.code,{children:"."}),", ",(0,s.jsx)(n.code,{children:"1-5"}),", ",(0,s.jsx)(n.code,{children:"a-j"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"format",children:"Format"}),"\n",(0,s.jsxs)(n.p,{children:["The figure below showcases a 12 character string formatted into a 64-bit unsigned integer. Note: the 13th char, if any, contains 2",(0,s.jsx)("sup",{children:"4"})," = 16 cases per 1 digit (char): 1 (",(0,s.jsx)(n.code,{children:"."}),") + 5 (",(0,s.jsx)(n.code,{children:"1-5"}),") + 10 (",(0,s.jsx)(n.code,{children:"a-j"}),")."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"naming-conventions-format",src:c(44918).A+"",width:"2140",height:"691"})}),"\n",(0,s.jsx)(n.h2,{id:"encoding-and-decoding",children:"Encoding and decoding"}),"\n",(0,s.jsxs)(n.p,{children:["Antelope name objects can be created, encoded, and decoded via the ",(0,s.jsx)(n.code,{children:"sysio::name"})," class."]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["To encode an ",(0,s.jsx)(n.code,{children:"std::string"})," into an Antelope name object, use the appropriate ",(0,s.jsx)(n.code,{children:"sysio::name()"})," constructor."]}),"\n",(0,s.jsxs)(n.li,{children:["To encode a ",(0,s.jsx)(n.code,{children:"char *"})," string literal into an Antelope name object, you can also use the ",(0,s.jsx)(n.code,{children:'""_n'})," operator."]}),"\n",(0,s.jsxs)(n.li,{children:["To decode an Antelope name object into an ",(0,s.jsx)(n.code,{children:"std::string"}),", use the ",(0,s.jsx)(n.code,{children:"sysio::to_string()"})," function."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",children:'auto sysio_user = sysio::name{user};  //encodes user string to sysio::name object\nauto user_str = user_name_obj.to_string(); //decodes sysio::name obj to string\nauto standard_account = "standardname"_n;  //encodes literal string to sysio::name\nauto non_standard_account = ".standard"_n; //encodes literal string to sysio::name\n'})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},44918:(e,n,c)=>{c.d(n,{A:()=>s});const s=c.p+"assets/images/naming-conventions-format-47a1688cc701dd0ea936e1dcb4abc661.png"},28453:(e,n,c)=>{c.d(n,{R:()=>a,x:()=>o});var s=c(96540);const t={},i=s.createContext(t);function a(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);