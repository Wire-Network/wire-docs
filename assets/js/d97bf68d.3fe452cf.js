"use strict";(self.webpackChunkwire_docs=self.webpackChunkwire_docs||[]).push([[2445],{92245:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>i,contentTitle:()=>d,default:()=>u,frontMatter:()=>s,metadata:()=>c,toc:()=>a});var t=n(74848),r=n(28453);const s={title:"Nodeop Common Setups"},d=void 0,c={id:"api-reference/tooling/nodeop/usage/node-setups/index",title:"Nodeop Common Setups",description:"Nodeop generally runs in two modes:",source:"@site/docs/api-reference/tooling/nodeop/usage/node-setups/index.md",sourceDirName:"api-reference/tooling/nodeop/usage/node-setups",slug:"/api-reference/tooling/nodeop/usage/node-setups/",permalink:"/docs/api-reference/tooling/nodeop/usage/node-setups/",draft:!1,unlisted:!1,editUrl:"https://github.com/Wire-Network/wire-docs/edit/master/docs/api-reference/tooling/nodeop/usage/node-setups/index.md",tags:[],version:"current",frontMatter:{title:"Nodeop Common Setups"}},i={},a=[];function l(e){const o={a:"a",code:"code",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.code,{children:"Nodeop"})," generally runs in two modes:"]}),"\n",(0,t.jsxs)(o.ul,{children:["\n",(0,t.jsx)(o.li,{children:(0,t.jsx)(o.a,{href:"/docs/api-reference/tooling/nodeop/usage/node-setups/producing-node",children:"Producing Node"})}),"\n",(0,t.jsx)(o.li,{children:(0,t.jsx)(o.a,{href:"/docs/api-reference/tooling/nodeop/usage/node-setups/non-producing-node",children:"Non-Producing Node"})}),"\n"]}),"\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.code,{children:"Producing Nodes"})," are configured for block production. They connect to the peer-to-peer network and actively produce new blocks. Loose transactions are also validated and relayed. On mainnet, ",(0,t.jsx)(o.code,{children:"Producing Nodes"})," only produce blocks if their assigned block producer is part of an active schedule."]}),"\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.code,{children:"Non-Producing Nodes"})," connect to the peer-to-peer network but do not actively produce new blocks; they are useful for acting as proxy nodes, relaying API calls, validating transactions, broadcasting information to other nodes, etc. ",(0,t.jsx)(o.code,{children:"Non-Producing Nodes"})," are also useful for monitoring the blockchain state."]})]})}function u(e={}){const{wrapper:o}={...(0,r.R)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,o,n)=>{n.d(o,{R:()=>d,x:()=>c});var t=n(96540);const r={},s=t.createContext(r);function d(e){const o=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function c(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),t.createElement(s.Provider,{value:o},e.children)}}}]);